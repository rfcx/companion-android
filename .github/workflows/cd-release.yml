name: CD Release

on:
  workflow_dispatch:
    inputs:
          tag_id:
            description: 'id of tag'     
            required: true
            default: ''
          track:
            description: 'track'     
            required: true
            default: 'production'
            type: choice
            options:
            - production
            - internal

jobs:
  lint-build-test:
    name: Build, Create tag, Release
    runs-on: ubuntu-latest
    steps:
      - name: 'Setup: Clone'
        uses: actions/checkout@v1

      - name: 'Setup: JDK 11'
        uses: actions/setup-java@v1
        with:
          java-version: 11

      # -------------------------------------------------- #
      # Build Production                                   #
      # -------------------------------------------------- #
          
      - name: 'Build: Assemble APK'
        run: ./gradlew assembleInternalRelease
        
      - uses: r0adkll/sign-android-release@v1
        name: Sign app APK
        # ID used to access action output
        id: sign_app
        with:
          releaseDirectory: ${{ env.RELEASE_PATH }}
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.KEY_STORE_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        env:
          # override default build-tools version (29.0.3) -- optional
          BUILD_TOOLS_VERSION: "30.0.2"
          RELEASE_PATH: 'app/build/outputs/apk/internal/release'
          
      - name: 'Rename APK'
        run: cp ${{steps.sign_app.outputs.signedReleaseFile}} ${{ env.FINAL_FILE_PATH }}
        env:
          FINAL_FILE_PATH: 'app/build/outputs/apk/internal/release/companion-production.apk'

      # -------------------------------------------------- #
      # Create tag and release                             #
      # -------------------------------------------------- #
      
      - name: Release
        uses: softprops/action-gh-release@v1
        id: release
        with:
          tag_name: ${{ github.event.inputs.tag_id }}
          body_path: 'releaseDetail/whatsnew-en-US'
          files: 'app/build/outputs/apk/internal/release/companion-production.apk'

      - name: 'Release: publish to Google Play'
        uses: r0adkll/upload-google-play@v1.0.15
        id: google-play
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT }}
          packageName: org.rfcx.companion
          releaseFiles: app/build/outputs/apk/internal/release/companion-production.apk
          track: ${{ github.event.inputs.track }}
          whatsNewDirectory: releaseDetail/
          mappingFile: app/build/outputs/mapping/internalRelease/mapping.txt

      # -------------------------------------------------- #
      # Prepare Slack message                              #
      # -------------------------------------------------- #

      - name: Prepare Slack message
        run: echo -e "SLACK_MESSAGE=$(awk '{printf "%s\\\\\\\\n", $0}' releaseDetail/whatsnew-en-US)" >> $GITHUB_ENV

      # -------------------------------------------------- #
      # Notify Slack                                       #
      # -------------------------------------------------- #

      - name: 'Notify: Get Slack User'
        uses: kanga333/variable-mapper@92703696e9a3f370901c3d53ae3836569b1055e5
        if: always()
        with:
          key: '${{ github.event.sender.login }}'
          map: |
            {
              "Tooseriuz": { "SLACK_MENTION_USERS": "UC905TCTV" }
            }

      - name: 'Notify: Slack Failed'
        uses: ravsamhq/notify-slack-action@v1
        if: always()
        with:
          notify_when: 'failure,warning'
          status: ${{ job.status }}
          notification_title: '❌ CD: Companion v${{ github.event.inputs.tag_id }} ${{ github.event.inputs.track }} Release Google Play'
          message_format: '*FAILED:* More detail in <{run_url}|here>'
          footer: '<{run_url}|{status_message}> at <{commit_url}|{commit_sha}> (triggered by ${{ env.SENDER }})'
          mention_users_when: 'failure,warnings'
          mention_users: ${{ env.SLACK_MENTION_USERS }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_ALERT_COREDT_WEBHOOK }}
          SENDER: ${{ github.event.sender.login }}
          
      - name: 'Notify: Slack Success'
        uses: ravsamhq/notify-slack-action@v1
        if: always()
        with:
          notify_when: 'success'
          status: ${{ job.status }}
          notification_title: '✅ *CD:* Companion v${{ github.event.inputs.tag_id }} _${{ github.event.inputs.track }}_ Release Google Play \n ${{ env.SLACK_MESSAGE }}'
          message_format: '*SUCCESS:* Release created in <${{ steps.release.outputs.url }}|here>, <https://play.google.com/store/apps/details?id=org.rfcx.companion | Google Play>\n*test*'
          footer: '<{run_url}|{status_message}> at <{commit_url}|{commit_sha}> (triggered by ${{ env.SENDER }})'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_ALERT_COREDT_WEBHOOK }}
          SENDER: ${{ github.event.sender.login }}
